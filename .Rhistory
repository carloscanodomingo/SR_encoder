data_freq$rmse = data_frame_freq$rmse
data_freq$noise = data_frame_freq$noise
data_freq$selected = data_frame_freq$selected
data_freq[[paste("SR",index_sr,sep = "")]] =data_frame_freq$freqs
}
data_freq = as.data.frame(data_freq)
test <- data_freq %>%
gather( mode, diff_freq,all_of(SR_names) , factor_key=TRUE) %>%
group_by(type, selected, mode) %>%
#summarise(cor = mean(diff_freq), .groups = 'drop') %>%
summarise(cor = cor(diff_freq, noise), .groups = 'drop') %>%
ggplot(aes(x = type, y = cor, fill=type)) +
geom_bar(stat="identity", color = "black") +
scale_fill_manual(values = coulours_cases[freq_names]) +
facet_grid(selected ~ mode  ,labeller = labeller( selected = label_selected), scales = "free") +
theme(
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
legend.position = "bottom") +
guides(fill = guide_legend(nrow = 1))
test
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
plot_freq(data_ts, "decoded", index_sr)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
plot_rmse(data_ts)
path = paste("IMG/metric/", "rmse", ".png", sep = "")
ggsave(path, width = 20, height = 5, units = "cm")
ggsave(path, width = 20, height = 8, units = "cm")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts)
path = paste("IMG/metric/", "rmse", ".png", sep = "")
ggsave(path, width = 20, height = 8, units = "cm")
plot_rmse(data_ts)
index_sr = 1
data_frame_freq = data_frame_freq %>%
group_by(selected)  %>%
summarize(across(freq_names, ~rmse(.,Lorentz)))
data_frame_freq = get_freq_data(data_ts, "decoded", index_sr)
data_frame_freq$selected= data_ts$selected;
data_frame_freq = data_frame_freq %>%
group_by(selected)  %>%
summarize(across(freq_names, ~rmse(.,Lorentz)))
data_frame_freq = data_frame_freq %>%
group_by(selected)  %>%
summarize(across(freq_names, ~rmse(.,Lorentz))) %>%
gather( type, freq_cor,all_of(freq_names) , factor_key=TRUE)
data_frame_freq = get_freq_data(data_ts, "decoded", index_sr)
data_frame_freq$selected= data_ts$selected;
data_frame_freq = data_frame_freq %>%
group_by(selected)  %>%
summarize(across(freq_names, ~rmse(.,Lorentz))) %>%
gather( type, freq_cor,all_of(freq_names) , factor_key=TRUE)
data_frame_freq = get_freq_data(data_ts, "decoded", index_sr)
data_frame_freq$selected= data_ts$selected;
data_frame_freq = data_frame_freq %>%
group_by(selected)  %>%
summarize(across(freq_names, ~rmse(.,Lorentz))) %>%
gather( type, freq_cor,all_of(freq_names) , factor_key=TRUE) %>%
group_by(selected)
data_frame_freq = data_frame_freq %>%
group_by(selected)  %>%
summarize(across(freq_names, ~rmse(.,Lorentz))) %>%
gather( type, freq_cor,all_of(freq_names) , factor_key=TRUE) %>%
group_by(selected) %>%
summarize(freq_cor = freq_cor/ max(freq_cor))
data_frame_freq = get_freq_data(data_ts, "decoded", index_sr)
data_frame_freq$selected= data_ts$selected;
data_frame_freq = data_frame_freq %>%
group_by(selected)  %>%
summarize(across(freq_names, ~rmse(.,Lorentz))) %>%
gather( type, freq_cor,all_of(freq_names) , factor_key=TRUE) %>%
group_by(selected) %>%
summarize(freq_cor = freq_cor/ max(freq_cor))
data_freq$selected = data_frame_freq$selected
data_freq = list();
data_freq$selected = data_frame_freq$selected
data_freq$type = data_frame_freq$type
data_frame_freq = data_frame_freq %>%
group_by(selected)  %>%
summarize(across(freq_names, ~rmse(.,Lorentz))) %>%
gather( type, freq_cor,all_of(freq_names) , factor_key=TRUE) %>%
group_by(selected) %>%
summarize(freq_cor = freq_cor/ max(freq_cor), type = type)
data_frame_freq = get_freq_data(data_ts, "decoded", index_sr)
data_frame_freq$selected= data_ts$selected;
data_frame_freq = data_frame_freq %>%
group_by(selected)  %>%
summarize(across(freq_names, ~rmse(.,Lorentz))) %>%
gather( type, freq_cor,all_of(freq_names) , factor_key=TRUE) %>%
group_by(selected) %>%
summarize(freq_cor = freq_cor/ max(freq_cor), type = type)
data_freq$selected = data_frame_freq$selected
data_freq$type = data_frame_freq$type
data_freq[[paste("SR",index_sr,sep = "")]] =data_frame_freq$freq_cor
data_freq = list();
SR_names = c("SR1","SR2","SR3","SR4","SR5","SR6")
for (index_sr in c(1:6))
{
data_frame_freq = get_freq_data(data_ts, "decoded", index_sr)
data_frame_freq$selected= data_ts$selected;
data_frame_freq = data_frame_freq %>%
group_by(selected)  %>%
summarize(across(freq_names, ~rmse(.,Lorentz))) %>%
gather( type, freq_cor,all_of(freq_names) , factor_key=TRUE) %>%
group_by(selected) %>%
summarize(freq_cor = freq_cor/ max(freq_cor), type = type)
data_freq$selected = data_frame_freq$selected
data_freq$type = data_frame_freq$type
data_freq[[paste("SR",index_sr,sep = "")]] =data_frame_freq$freq_cor
}
data_freq = as.data.frame(data_freq)
data_freq %>%
gather( mode, freq_cor,all_of(SR_names) , factor_key=TRUE) %>%
ggplot(aes(x = type, y = freq_cor, fill=type)) +
geom_bar(stat="identity", width = 0.7, position=position_dodge(width = 4)) +
scale_fill_manual(values = coulours_cases[freq_names]) +
facet_grid(selected ~ mode  ,labeller = labeller( selected = label_selected), scales = "free") +
theme_bw() +
ylab("RMSE") +
theme(
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
legend.title = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 8),
legend.margin=margin(1,1,1,1),
legend.box.margin=margin(-10,-10,-1,-10)) +
guides(fill = guide_legend(override.aes = list(width = 0.2), nrow = 1))
data_freq = list();
SR_names = c("SR1","SR2","SR3","SR4","SR5","SR6")
for (index_sr in c(1:6))
{
data_frame_freq = get_freq_data(data_ts, "decoded", index_sr)
data_frame_freq$selected= data_ts$selected;
data_frame_freq = data_frame_freq %>%
group_by(selected)  %>%
summarize(across(freq_names, ~rmse(.,Lorentz))) %>%
gather( type, freq_cor,all_of(freq_names) , factor_key=TRUE) %>%
group_by(selected) %>%
summarize(freq_cor = freq_cor - min(freq_cor) / (max(freq_cor) - min(freq_cor)), type = type)
data_freq$selected = data_frame_freq$selected
data_freq$type = data_frame_freq$type
data_freq[[paste("SR",index_sr,sep = "")]] =data_frame_freq$freq_cor
}
data_freq = as.data.frame(data_freq)
data_freq %>%
gather( mode, freq_cor,all_of(SR_names) , factor_key=TRUE) %>%
ggplot(aes(x = type, y = freq_cor, fill=type)) +
geom_bar(stat="identity", width = 0.7, position=position_dodge(width = 4)) +
scale_fill_manual(values = coulours_cases[freq_names]) +
facet_grid(selected ~ mode  ,labeller = labeller( selected = label_selected), scales = "free") +
theme_bw() +
ylab("Normalized RMSE") +
theme(
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
legend.title = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 8),
legend.margin=margin(1,1,1,1),
legend.box.margin=margin(-10,-10,-1,-10)) +
guides(fill = guide_legend(override.aes = list(width = 0.2), nrow = 1))
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts, TRUE)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts, TRUE)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts, TRUE)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_rmse(data_ts, TRUE)
path = paste("IMG/metric/", "rmse_norm", ".png", sep = "")
ggsave(path, width = 20, height = 8, units = "cm")
plot_rmse(data_ts, FALSE)
path = paste("IMG/metric/", "rmse", ".png", sep = "")
ggsave(path, width = 20, height = 8, units = "cm")
plot_case_freq(data_ts, current_index_worst)
path = paste("IMG/case/", "case_", current_index_worst, ".png", sep = "")
ggsave(path, width = 20, height = 20, units = "cm")
plot_case_freq(data_ts, current_index_normal)
path = paste("IMG/case/", "case_", current_index_normal, ".png", sep = "")
ggsave(path, width = 20, height = 20, units = "cm")
plot_case_freq(data_ts, current_index_normal)
plot_case_freq(data_ts, current_index_normal)
data_freq <- get_freqs(data_ts, index)
data_freq_raw = list()
data_freq_raw$Raw = data_freq$Raw
data_freq_raw = list()
data_freq_raw$Lorentz = data_freq$Lorentz
data_freq_raw = as_tibble(data_freq_raw)
function(data_ts, index)
{
signal_raw = get_signals(data_ts, index) %>%
dplyr::filter(Signal == "Raw") %>%
dplyr::select(x, value)
signal_lorentz = get_signals(data_ts, index) %>%
dplyr::filter(Signal == "Lorentz") %>%
dplyr::select(x, value)
signals = get_signals(data_ts, index) %>%
dplyr::filter(Signal != "Raw" & Signal != "Lorentz")
data_freq <- get_freqs(data_ts, index)
data_freq_raw = list()
data_freq_raw$Raw = data_freq$Raw
data_freq_raw$freq = data_freq$Raw
data_freq_raw = as_tibble(data_freq_raw)
data_freq_gathered <- data_freq %>%
dplyr::select(-c(Raw)) %>%
gather( Signal, freqs,, factor_key=TRUE)
data_freq_gathered$Signal  = factor(data_freq_gathered$Signal, levels = freq_names_order)
signals$Signal  = factor(signals$Signal, levels = freq_names_order)
ggplot() +
geom_line(data = signal_raw,aes(x = x, y = value), color = coulours_cases["Raw"], size = 0.8, alpha = 0.8) +
geom_line(data = signal_lorentz,aes(x = x, y = value), color = coulours_cases["Lorentz"], size = 0.8, alpha = 0.5) +
geom_line(data = signals,aes(x = x, y = value, color = Signal), size = 1.2) +
geom_vline(data = data_freq_raw, aes(xintercept = Raw), color = "black", size = 0.8, lty = "longdash", alpha = 0.7) +
geom_vline(data = data_freq_gathered, aes(xintercept = freqs, color = Signal), size = 1) +
scale_color_manual(values = coulours_cases) +
facet_wrap(~Signal, ncol = 2) +
theme(
legend.position = "none",
) +
ylab(TeX("Normalized Intensity")) +
xlab("Frequency (Hz)") +
guides(color = guide_legend(nrow = 1), fill =
guide_legend(nrow = 1), override.aes = list(linetype=c(1,1,1,1,1,1,1,1), shape=c(NA,NA,NA,NA,NA,NA,NA,NA)))
}
debugSource("C:/GIT/MATLAB/Paper 5/utils_result.R")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_case_freq(data_ts, current_index_normal)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_case_freq(data_ts, current_index_normal)
plot_case_freq(data_ts, current_index_worst)
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_freq(data_ts,
plot_freq(data_ts, "fit", 1)
path = paste("IMG/hist/", "fit_", 1, ".png", sep = "")
plot_freq(data_ts, "fit", 1)
plot_hist_raw(data_ts, "all")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_hist_raw(data_ts, "all")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_hist_raw(data_ts, "a
)))
)
""
")
plot_hist_raw(data_ts, "all")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_freq(data_ts, "fit", 1)
path = paste("IMG/hist/", "fit_", 1, ".png", sep = "")
ggsave(path, width = 20, height = 12, units = "cm")
for (index_sr in c(1:6))
{
plot_freq(data_ts, "decoded", index_sr)
path = paste("IMG/hist/", "decoded_", index_sr, ".png", sep = "")
ggsave(path, width = 20, height = 12, units = "cm")
}
plot_hist_raw(data_ts, "all")
path = paste("IMG/hist/", "lorentz_all", ".png", sep = "")
ggsave(path, width = 20, height = 12, units = "cm")
data_freq <- get_freq_data(data_ts, "decoded", 2)
plot_hist_raw(data_ts, "Selected")
path = paste("IMG/hist/", "lorentz_selected", ".png", sep = "")
ggsave(path, width = 20, height = 12, units = "cm")
data_freq <- get_freq_data(data_ts, "decoded", 2)
plot_hist_raw(data_ts, "Not Selected")
path = paste("IMG/hist/", "lorentz_selected", ".png", sep = "")
ggsave(path, width = 20, height = 12, units = "cm")
data_freq <- get_freq_data(data_ts, "decoded", 2)
plot_hist_raw(data_ts, "all")
plot_hist_raw(data_ts, "all")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_hist_raw(data_ts, "all")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_hist_raw(data_ts, "all")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_hist_raw(data_ts, "all")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_hist_raw(data_ts, "all")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_hist_raw(data_ts, "all")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_hist_raw(data_ts, "all")
plot_hist_raw(data_ts, "all")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_hist_raw(data_ts, "all")
plot_hist_raw(data_ts, "all")
plot_hist_raw(data_ts, "all")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_hist_raw(data_ts, "all")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_hist_raw(data_ts, "all")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_hist_raw(data_ts, "all")
plot_hist_raw(data_ts, "all")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_hist_raw(data_ts, "all")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_hist_raw(data_ts, "all")
plot_hist_raw(data_ts, "all")
plot_hist_raw(data_ts, "all")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_hist_raw(data_ts, "all")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_hist_raw(data_ts, "all")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_hist_raw(data_ts, "all")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_hist_raw(data_ts, "all")
plot_hist_raw(data_ts, "all")
path = paste("IMG/hist/", "lorentz_all", ".png", sep = "")
ggsave(path, width = 20, height = 12, units = "cm")
plot_hist_raw(data_ts, "all")
path = paste("IMG/hist/", "lorentz_all", ".png", sep = "")
ggsave(path, width = 20, height = 12, units = "cm")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_hist_raw(data_ts, "all")
path = paste("IMG/hist/", "lorentz_all", ".png", sep = "")
ggsave(path, width = 20, height = 12, units = "cm")
source("C:/GIT/MATLAB/Paper 5/utils_result.R")
plot_freq(data_ts, "decoded", index_sr)
for (index_freq in c(1:6))
{
freq_names = apply(expand.grid(AE_types, signal_types), 1, paste, collapse=" ")
data <- get_freq_data(data_ts, type, index_freq) %>%
dplyr::select(freq_names)
lorentz_ref = data.frame(type =data_ts$selected,freqs =  sapply(data_ts$loretnz_freq,"[[",freq)) %>%
dplyr::filter(type == 1)
par = snormFit(lorentz_ref$freqs)$par
ref = list()
ref$mean = par[1]
ref$sd =  par[2]
ref$xi = par[3]
fit[[index_freq]] = data %>%
mutate(type =data_ts$selected) %>%
dplyr::filter(type == 1) %>%
gather( type, freqs,all_of(freq_names) , factor_key=TRUE) %>%
group_by(type) %>%
do(par = snormFit(.$freqs)$par, ks = ks.test(lorentz_ref$freqs, .$freqs, exact = FALSE)$statistic[[1]]) %>%
mutate(mean = par[1], sd = par[2], xi = par[3]) %>%
dplyr::select(type, mean, sd, xi,ks)
}
freq_names = apply(expand.grid(AE_types, signal_types), 1, paste, collapse=" ")
data <- get_freq_data(data_ts, type, index_freq) %>%
dplyr::select(freq_names)
"decoded"
{
freq_names = apply(expand.grid(AE_types, signal_types), 1, paste, collapse=" ")
data <- get_freq_data(data_ts, "decoded", index_freq) %>%
dplyr::select(freq_names)
lorentz_ref = data.frame(type =data_ts$selected,freqs =  sapply(data_ts$loretnz_freq,"[[",freq)) %>%
dplyr::filter(type == 1)
par = snormFit(lorentz_ref$freqs)$par
ref = list()
ref$mean = par[1]
ref$sd =  par[2]
ref$xi = par[3]
fit[[index_freq]] = data %>%
mutate(type =data_ts$selected) %>%
dplyr::filter(type == 1) %>%
gather( type, freqs,all_of(freq_names) , factor_key=TRUE) %>%
group_by(type) %>%
do(par = snormFit(.$freqs)$par, ks = ks.test(lorentz_ref$freqs, .$freqs, exact = FALSE)$statistic[[1]]) %>%
mutate(mean = par[1], sd = par[2], xi = par[3]) %>%
dplyr::select(type, mean, sd, xi,ks)
}
freq_names = apply(expand.grid(AE_types, signal_types), 1, paste, collapse=" ")
data <- get_freq_data(data_ts, "decoded", index_freq) %>%
dplyr::select(freq_names)
lorentz_ref = data.frame(type =data_ts$selected,freqs =  sapply(data_ts$loretnz_freq,"[[",freq)) %>%
dplyr::filter(type == 1)
lorentz_ref = data.frame(type =data_ts$selected,freqs =  sapply(data_ts$loretnz_freq,"[[",index_freq)) %>%
dplyr::filter(type == 1)
par = snormFit(lorentz_ref$freqs)$par
ref = list()
ref$mean = par[1]
ref$sd =  par[2]
ref$xi = par[3]
fit[[index_freq]] = data %>%
mutate(type =data_ts$selected) %>%
dplyr::filter(type == 1) %>%
gather( type, freqs,all_of(freq_names) , factor_key=TRUE) %>%
group_by(type) %>%
do(par = snormFit(.$freqs)$par, ks = ks.test(lorentz_ref$freqs, .$freqs, exact = FALSE)$statistic[[1]]) %>%
mutate(mean = par[1], sd = par[2], xi = par[3]) %>%
dplyr::select(type, mean, sd, xi,ks)
for (index_freq in c(1:6))
{
freq_names = apply(expand.grid(AE_types, signal_types), 1, paste, collapse=" ")
data <- get_freq_data(data_ts, "decoded", index_freq) %>%
dplyr::select(freq_names)
lorentz_ref = data.frame(type =data_ts$selected,freqs =  sapply(data_ts$loretnz_freq,"[[",index_freq)) %>%
dplyr::filter(type == 1)
par = snormFit(lorentz_ref$freqs)$par
ref = list()
ref$mean = par[1]
ref$sd =  par[2]
ref$xi = par[3]
fit = list()
fit[[index_freq]] = data %>%
mutate(type =data_ts$selected) %>%
dplyr::filter(type == 1) %>%
gather( type, freqs,all_of(freq_names) , factor_key=TRUE) %>%
group_by(type) %>%
do(par = snormFit(.$freqs)$par, ks = ks.test(lorentz_ref$freqs, .$freqs, exact = FALSE)$statistic[[1]]) %>%
mutate(mean = par[1], sd = par[2], xi = par[3]) %>%
dplyr::select(type, mean, sd, xi,ks)
}
View(fit)
fit = list();
for (index_freq in c(1:6))
{
freq_names = apply(expand.grid(AE_types, signal_types), 1, paste, collapse=" ")
data <- get_freq_data(data_ts, "decoded", index_freq) %>%
dplyr::select(freq_names)
lorentz_ref = data.frame(type =data_ts$selected,freqs =  sapply(data_ts$loretnz_freq,"[[",index_freq)) %>%
dplyr::filter(type == 1)
par = snormFit(lorentz_ref$freqs)$par
ref = list()
ref$mean = par[1]
ref$sd =  par[2]
ref$xi = par[3]
fit[[index_freq]] = data %>%
mutate(type =data_ts$selected) %>%
dplyr::filter(type == 1) %>%
gather( type, freqs,all_of(freq_names) , factor_key=TRUE) %>%
group_by(type) %>%
do(par = snormFit(.$freqs)$par, ks = ks.test(lorentz_ref$freqs, .$freqs, exact = FALSE)$statistic[[1]]) %>%
mutate(mean = par[1], sd = par[2], xi = par[3]) %>%
dplyr::select(type, mean, sd, xi,ks)
}
fit
fit[[1]]$ks
debugSource("C:/GIT/MATLAB/Paper 5/utils_result.R")
print_table_freq(data_ts, 1
)
